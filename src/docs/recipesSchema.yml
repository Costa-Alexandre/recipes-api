openapi: '3.0.2'
info:
  title: Recipes API
  version: '1.0'
servers:
  - url: http://localhost:3000

components:
  schemas:
    LanguagesWithCountries:
      type: object
      required:
        - code
        - language
      properties:
        id:
          type: integer
          example: 10
          format: int64
        code:
          type: string
          example: en
        language:
          type: string
          example: English
        countries:
          type: array
          items:
            type: string
          example:
            - United States
            - United Kingdom
            - Canada
    Languages:
      type: object
      required:
        - code
        - language
      properties:
        id:
          type: integer
          example: 10
          format: int64
        code:
          type: string
          example: en
        language:
          type: string
          example: English
  responses:
    '400':
      description: 'Schema validation error'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Schema validation error
    '401':
      description: 'Unauthorized: Authentication token missing'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'Unauthorized: Authentication token missing'
    '403':
      description: 'Forbidden: Insufficient privileges to access this resource'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 'Forbidden: Insufficient privileges to access this resource'
    '404':
      description: 'Not Found'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Not Found
    '500':
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal Server Error

  securitySchemes:
    bearerAuth:
      type: http
      description: JWT authorization of an API
      scheme: bearer
      bearerFormat: JWT
paths:
  /health:
    get:
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /languages:
    get:
      tags:
        - Languages
      description: Return all languages, with countries that speak them
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/LanguagesWithCountries'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - bearerAuth: []

    post:
      tags:
        - Languages
      description: 'Add a new language'
      operationId: 'addLanguage'
      requestBody:
        description: Language object that needs to be added
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - language
              properties:
                code:
                  type: string
                  example: en
                language:
                  type: string
              example:
                code: en
                language: English

      responses:
        '200':
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - bearerAuth: []

  /languages/{id}:
    put:
      tags:
        - Languages
      description: 'Update a language'
      parameters:
        - name: id
          in: path
          description: ID of language to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Language object that needs to be updated
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - language
              properties:
                code:
                  type: string
                  example: en
                language:
                  type: string
              example:
                code: en
                language: English
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Languages
      description: 'Delete a language'
      parameters:
        - name: id
          in: path
          description: ID of language to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - bearerAuth: []
    get:
      tags:
        - Languages
      description: 'Get all countries that speak a language'
      parameters:
        - name: id
          in: path
          description: ID of language to get countries for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesWithCountries'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - bearerAuth: []
